// generated with ast extension for cup
// version 0.8
// 7/1/2024 7:54:26


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(FormPars FormPars);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(MethodDecl MethodDecl);
    public void visit(ClassDeclSafeVarDecl ClassDeclSafeVarDecl);
    public void visit(SafeVarIdentifiersList SafeVarIdentifiersList);
    public void visit(OptDesignator OptDesignator);
    public void visit(StaticInitializer StaticInitializer);
    public void visit(ConstAssignmentList ConstAssignmentList);
    public void visit(Relop Relop);
    public void visit(DeclList DeclList);
    public void visit(DesignatorStatementList DesignatorStatementList);
    public void visit(DesignatorStatementAssign DesignatorStatementAssign);
    public void visit(Expr Expr);
    public void visit(ClassFieldVarIdentifiersList ClassFieldVarIdentifiersList);
    public void visit(MulopFactorList MulopFactorList);
    public void visit(SafeVarDecl SafeVarDecl);
    public void visit(AndCondFactList AndCondFactList);
    public void visit(AddopTermList AddopTermList);
    public void visit(VarIdentifiersList VarIdentifiersList);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(Program Program);
    public void visit(DesignatorDetailList DesignatorDetailList);
    public void visit(DesignatorDetail DesignatorDetail);
    public void visit(TypeOrVoidMethodName TypeOrVoidMethodName);
    public void visit(SafeStaticVarDeclList SafeStaticVarDeclList);
    public void visit(OptDesignatorStatementList OptDesignatorStatementList);
    public void visit(SafeDesignatorStatementListSemi SafeDesignatorStatementListSemi);
    public void visit(Mulop Mulop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(NamespaceList NamespaceList);
    public void visit(OptClassBody OptClassBody);
    public void visit(StaticInitList StaticInitList);
    public void visit(DesignatorStatementListSemi DesignatorStatementListSemi);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(SafeIfElseCondition SafeIfElseCondition);
    public void visit(Type Type);
    public void visit(DesignatorStatementAssignNoSemi DesignatorStatementAssignNoSemi);
    public void visit(NonEmptyStaticInitList NonEmptyStaticInitList);
    public void visit(ConstLiteral ConstLiteral);
    public void visit(OptDesignatorList OptDesignatorList);
    public void visit(ClassDecl ClassDecl);
    public void visit(FactorPars FactorPars);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(ClassDeclSafeVarDeclList ClassDeclSafeVarDeclList);
    public void visit(OrCondTermList OrCondTermList);
    public void visit(ActPars ActPars);
    public void visit(Designator Designator);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(Term Term);
    public void visit(TypeOrVoidMethodNameIsVoid TypeOrVoidMethodNameIsVoid);
    public void visit(TypeOrVoidMethodNameIsType TypeOrVoidMethodNameIsType);
    public void visit(MethodDeclNoFormPars MethodDeclNoFormPars);
    public void visit(MethodDeclFormPars MethodDeclFormPars);
    public void visit(NoMethodDeclList NoMethodDeclList);
    public void visit(HasMethodDeclList HasMethodDeclList);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondFactExpr CondFactExpr);
    public void visit(NoAndCondFactList NoAndCondFactList);
    public void visit(HasAndCondFactList HasAndCondFactList);
    public void visit(CondTerm CondTerm);
    public void visit(NoCondTermList NoCondTermList);
    public void visit(HasOrCondTermList HasOrCondTermList);
    public void visit(ConditionalOR ConditionalOR);
    public void visit(Condition Condition);
    public void visit(NoDesignatorDetailList NoDesignatorDetailList);
    public void visit(SecondDesignatorDetailList SecondDesignatorDetailList);
    public void visit(FirstDesignatorDetailList FirstDesignatorDetailList);
    public void visit(NoNamespaceDesignator NoNamespaceDesignator);
    public void visit(NamespacedDesignator NamespacedDesignator);
    public void visit(NoDesignator NoDesignator);
    public void visit(HasOptDesignator HasOptDesignator);
    public void visit(NoDesignatorList NoDesignatorList);
    public void visit(HasOptDesignatorList HasOptDesignatorList);
    public void visit(DesignatorDetailFactorDecr DesignatorDetailFactorDecr);
    public void visit(DesignatorDetailFactorIncr DesignatorDetailFactorIncr);
    public void visit(DesignatorStatementMisc DesignatorStatementMisc);
    public void visit(DesignatorStatementFuncCall DesignatorStatementFuncCall);
    public void visit(ExprNegation ExprNegation);
    public void visit(ExprNoMinus ExprNoMinus);
    public void visit(ExprMinus ExprMinus);
    public void visit(NoAddopTerm NoAddopTerm);
    public void visit(HasAddopTermList HasAddopTermList);
    public void visit(TermMulopFactorList TermMulopFactorList);
    public void visit(TermFactor TermFactor);
    public void visit(SingleMulopFactor SingleMulopFactor);
    public void visit(HasMulopFactorList HasMulopFactorList);
    public void visit(FactorLparen FactorLparen);
    public void visit(FactorNewFactorPars FactorNewFactorPars);
    public void visit(FactorNewExpr FactorNewExpr);
    public void visit(FactorBool FactorBool);
    public void visit(FactorChar FactorChar);
    public void visit(FactorNumber FactorNumber);
    public void visit(FactorDesignatorNoFactorPars FactorDesignatorNoFactorPars);
    public void visit(FactorDesignatorFactorPars FactorDesignatorFactorPars);
    public void visit(FuncCall FuncCall);
    public void visit(FactorParsNoActPars FactorParsNoActPars);
    public void visit(FactorParsActPars FactorParsActPars);
    public void visit(SingleActPar SingleActPar);
    public void visit(MultipleActPars MultipleActPars);
    public void visit(SingleDesignatorStatementListAssignSemi SingleDesignatorStatementListAssignSemi);
    public void visit(SingleDesignatorStatementListSemi SingleDesignatorStatementListSemi);
    public void visit(MultipleDesignatorStatementListAssignSemi MultipleDesignatorStatementListAssignSemi);
    public void visit(MultipleDesignatorStatementListSemi MultipleDesignatorStatementListSemi);
    public void visit(ErrSafeDesignatorStatementListSemi ErrSafeDesignatorStatementListSemi);
    public void visit(HasSafeDesignatorStatementListSemi HasSafeDesignatorStatementListSemi);
    public void visit(SingleDesignatorStatementListAssign SingleDesignatorStatementListAssign);
    public void visit(SingleDesignatorStatementList SingleDesignatorStatementList);
    public void visit(MultipleDesignatorStatementListAssign MultipleDesignatorStatementListAssign);
    public void visit(MultipleDesignatorStatementList MultipleDesignatorStatementList);
    public void visit(NoOptDesignatorStatementList NoOptDesignatorStatementList);
    public void visit(HasOptDesignatorStatementList HasOptDesignatorStatementList);
    public void visit(NoStatementList NoStatementList);
    public void visit(HasStatementList HasStatementList);
    public void visit(StatementBlock StatementBlock);
    public void visit(StatementForNoCond3 StatementForNoCond3);
    public void visit(StatementForHasCond4 StatementForHasCond4);
    public void visit(StatementForNoCond1 StatementForNoCond1);
    public void visit(StatementForHasCond2 StatementForHasCond2);
    public void visit(StatementPrintNoArg StatementPrintNoArg);
    public void visit(StatementPrintConstArg StatementPrintConstArg);
    public void visit(StatementRead StatementRead);
    public void visit(StatementReturnNoExpr StatementReturnNoExpr);
    public void visit(StatementReturnExpr StatementReturnExpr);
    public void visit(StatementContinue StatementContinue);
    public void visit(StatementBreak StatementBreak);
    public void visit(StatementIfNoElse StatementIfNoElse);
    public void visit(StatementIfElse StatementIfElse);
    public void visit(StatementDesigAssign StatementDesigAssign);
    public void visit(StatementDesig StatementDesig);
    public void visit(ElseBegin ElseBegin);
    public void visit(IfBegin IfBegin);
    public void visit(ForLoopBodyEnd ForLoopBodyEnd);
    public void visit(ForLoopBodyBegin ForLoopBodyBegin);
    public void visit(ForLoopPostStmntEnd ForLoopPostStmntEnd);
    public void visit(ForLoopPostStmntBegin ForLoopPostStmntBegin);
    public void visit(ForLoopConditionEnd ForLoopConditionEnd);
    public void visit(ForLoopConditionBegin ForLoopConditionBegin);
    public void visit(ForLoopStart ForLoopStart);
    public void visit(SafeIfElseConditionErr SafeIfElseConditionErr);
    public void visit(SafeIfElseConditionOk SafeIfElseConditionOk);
    public void visit(DesignatorStatementAssignNoSemiErr DesignatorStatementAssignNoSemiErr);
    public void visit(DesignatorStatementAssignNoSemiOk DesignatorStatementAssignNoSemiOk);
    public void visit(DesignatorStatementAssignErr DesignatorStatementAssignErr);
    public void visit(DesignatorStatementAssignOk DesignatorStatementAssignOk);
    public void visit(DesignatorAssignArrUnpack DesignatorAssignArrUnpack);
    public void visit(DesignatorAssignNormal DesignatorAssignNormal);
    public void visit(NoOptClassBody NoOptClassBody);
    public void visit(HasOptClassBody HasOptClassBody);
    public void visit(StaticInitializerOk StaticInitializerOk);
    public void visit(MultipleStaticInitListSingle MultipleStaticInitListSingle);
    public void visit(MultipleStaticInitListMul MultipleStaticInitListMul);
    public void visit(NoStaticInitList NoStaticInitList);
    public void visit(HasStaticInitList HasStaticInitList);
    public void visit(SafeStaticVarDeclListSingle SafeStaticVarDeclListSingle);
    public void visit(SafeStaticVarDeclListOk SafeStaticVarDeclListOk);
    public void visit(NoClassDeclSafe NoClassDeclSafe);
    public void visit(HasClassDeclSafe HasClassDeclSafe);
    public void visit(ClassDeclSafeVarDeclErrLBrace ClassDeclSafeVarDeclErrLBrace);
    public void visit(ClassDeclSafeVarDeclErr ClassDeclSafeVarDeclErr);
    public void visit(ClassDeclSafeVarDeclOk ClassDeclSafeVarDeclOk);
    public void visit(ClassDeclNoExtendsNoStaticVarDecl ClassDeclNoExtendsNoStaticVarDecl);
    public void visit(ClassDeclNoExtendsStaticVarDecl ClassDeclNoExtendsStaticVarDecl);
    public void visit(ClassDeclExtendsNoStaticVarDeclErr ClassDeclExtendsNoStaticVarDeclErr);
    public void visit(ClassDeclExtendsStaticVarDeclErr ClassDeclExtendsStaticVarDeclErr);
    public void visit(ClassDeclExtendsNoStaticVarDecl ClassDeclExtendsNoStaticVarDecl);
    public void visit(ClassDeclExtendsStaticVarDecl ClassDeclExtendsStaticVarDecl);
    public void visit(ClassName ClassName);
    public void visit(SafeTypeLBrace SafeTypeLBrace);
    public void visit(SafeTypeLBraceOk SafeTypeLBraceOk);
    public void visit(MulopMod MulopMod);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLte RelopLte);
    public void visit(RelopLt RelopLt);
    public void visit(RelopGte RelopGte);
    public void visit(RelopGt RelopGt);
    public void visit(RelopIneq RelopIneq);
    public void visit(RelopEq RelopEq);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(RegularType RegularType);
    public void visit(NamespacedType NamespacedType);
    public void visit(NoDeclList NoDeclList);
    public void visit(DeclListClass DeclListClass);
    public void visit(DeclListVar DeclListVar);
    public void visit(DeclListConst DeclListConst);
    public void visit(ConstLiteralBool ConstLiteralBool);
    public void visit(ConstLiteralChar ConstLiteralChar);
    public void visit(ConstLiteralNumber ConstLiteralNumber);
    public void visit(SingleConstAssignment SingleConstAssignment);
    public void visit(MultipleConstAssignments MultipleConstAssignments);
    public void visit(ConstDecl ConstDecl);
    public void visit(FormParsErrComma FormParsErrComma);
    public void visit(MultipleFormPars MultipleFormPars);
    public void visit(MultipleFormParsArr MultipleFormParsArr);
    public void visit(SingleFormPars SingleFormPars);
    public void visit(SingleFormParsArr SingleFormParsArr);
    public void visit(ClassSingleVarIdentifier ClassSingleVarIdentifier);
    public void visit(ClassSingleArrayIdentifier ClassSingleArrayIdentifier);
    public void visit(ClassMultipleVarIdentifier ClassMultipleVarIdentifier);
    public void visit(ClassMultipleArrayIdentifier ClassMultipleArrayIdentifier);
    public void visit(SingleVarIdentifier SingleVarIdentifier);
    public void visit(SingleArrayIdentifier SingleArrayIdentifier);
    public void visit(MultipleVarIdentifier MultipleVarIdentifier);
    public void visit(MultipleArrayIdentifier MultipleArrayIdentifier);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(HasVarDeclList HasVarDeclList);
    public void visit(VarDecl VarDecl);
    public void visit(SafeVarIdentifiersListErrSemi SafeVarIdentifiersListErrSemi);
    public void visit(SafeVarIdentifiersListErrComma SafeVarIdentifiersListErrComma);
    public void visit(SafeSingleVarIdentifier SafeSingleVarIdentifier);
    public void visit(SafeSingleArrayIdentifier SafeSingleArrayIdentifier);
    public void visit(SafeMultipleVarIdentifier SafeMultipleVarIdentifier);
    public void visit(SafeMultipleArrayIdentifier SafeMultipleArrayIdentifier);
    public void visit(SafeVarDeclSuccess SafeVarDeclSuccess);
    public void visit(NamespaceName NamespaceName);
    public void visit(Namespace Namespace);
    public void visit(NamespaceListSingle NamespaceListSingle);
    public void visit(NamespaceListMultiple NamespaceListMultiple);
    public void visit(ProgName ProgName);
    public void visit(ProgramNoNamespace ProgramNoNamespace);
    public void visit(ProgramNamespace ProgramNamespace);

}
